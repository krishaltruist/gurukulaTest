import { ExecutionMetrics } from "./execution-metrics";
import { Configuration } from "./configuration";
export declare class ExecutionDisplay {
    private configuration;
    private indent;
    private currentIndent;
    private suiteHierarchy;
    private suiteHierarchyDisplayed;
    private successfulSpecs;
    private failedSpecs;
    private pendingSpecs;
    private lastWasNewLine;
    private hasCustomDisplaySpecStarted;
    private displayProcessors;
    constructor(configuration: Configuration);
    private static initProcessors(configuration);
    private static hasCustomDisplaySpecStarted(processors);
    jasmineStarted(runner: any): void;
    summary(metrics: ExecutionMetrics): void;
    successesSummary(): void;
    successfulSummary(spec: any, index: number): void;
    failuresSummary(): void;
    failedSummary(spec: any, index: number): void;
    pendingsSummary(): void;
    pendingSummary(spec: any, index: number): void;
    specStarted(spec: any): void;
    successful(spec: any): void;
    failed(spec: any): void;
    pending(spec: any): void;
    displayErrorMessages(spec: any, withStacktrace: boolean): void;
    filterStackTraces(traces: string): string;
    suiteStarted(suite: any): void;
    suiteDone(): void;
    ensureSuiteDisplayed(): void;
    displaySuite(suite: any): void;
    computeSuiteIndent(): void;
    log(stuff: String): void;
    newLine(): void;
    resetIndent(): void;
    increaseIndent(): void;
    decreaseIndent(): void;
}
